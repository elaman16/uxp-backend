spring.datasource.driver-class-name = com.mysql.jdbc.Driver
#spring.datasource.url = ${JDBC_DATABASE_URL}
spring.datasource.url = jdbc:mysql://us-cdbr-iron-east-04.cleardb.net/heroku_bbe779c0373df93?reconnect=true&user=b0c3b36ab4f94a&password=9900d9b9
spring.datasource.sqlScriptEncoding=UTF-8
spring.datasource.max-active=3
#spring.redis.host = ${REDIS_URL}
spring.redis.host=redis://h:p5ifopbilhp4t93ppe3r30rgqrs@ec2-107-22-162-129.compute-1.amazonaws.com:16439
spring.session.store-type=redis
server.session.timeout=5
jwtKey=1
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# Show or not log for each sql query
spring.jpa.show-sql = true

multipart.enabled=true
multipart.max-file-size=20MB
multipart.max-request-size=25MB

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
spring.mvc.dispatch-options-request=true
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect